# Generated by Django 2.2.6 on 2019-10-03 19:39

import datetime
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0020_auto_20191003_1908'),
    ]

    operations = [
        migrations.AlterField(
            model_name='notification',
            name='channel',
            field=models.CharField(choices=[('EMAIL', 'E-mail'), ('MOBILE', 'App')], default='EMAIL', max_length=16, verbose_name='Canal'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='notify_at',
            field=models.DateTimeField(default=datetime.datetime(2019, 10, 3, 19, 39, 28, 986571), verbose_name='Fecha de notificaci√≥n'),
        ),
        migrations.CreateModel(
            name='NewNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.Notification')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('new', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='blog.New')),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.notification', models.Model),
        ),
        migrations.CreateModel(
            name='BenefitNotification',
            fields=[
                ('notification_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='blog.Notification')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('benefit', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='blog.Benefit')),
            ],
            options={
                'abstract': False,
            },
            bases=('blog.notification', models.Model),
        ),
    ]
